% 
%  Laser tracker import and processing script
%  Author: Ben Rae
%  Last edited: 13/12/2023
%

% Import data using automated importer
Data = importfile('P:\NIN Projects\NIN2272\Laser Tracker Data\NIN2272\TEST_1_081223\TEST_1_H.txt');

% Number of points captured in file
numPoints = height(Data);

% Capture rate (Hz)
captureRate = 1000;

% Time between each point (s)
dt = 1 / captureRate;

% Total capture time (s)
captureTime = numPoints * dt;
captureTimeMin = captureTime / 60;

%% Calculate time for each point
disp('Calculating, please wait...');
for i=1:height(Data)
    Data.time(i) = i * dt; 
end
disp('Calculation complete');

%% Create normalised option (no negative axis moves)
DataNorm = Data;
DataNorm.x = abs(DataNorm.x);
DataNorm.y = abs(DataNorm.y);
DataNorm.z = abs(DataNorm.z);

%% Graphing
t = tiledlayout(3,6);
ax1 = nexttile(1, [3 3]);
hold on;
f3d = plot3(DataNorm.x, DataNorm.y, DataNorm.z);
xlim padded;
ylim padded;
zlim padded;
f3dOrigin = plot3(0,0,0);
f3dOrigin.Color = "red";
f3dOrigin.Marker = "o";
daspect([1 1 1]);
grid on;
title('3D view');
ylabel('distance (')

ax2 = nexttile(4, [1 3]);
hold on;
plot(DataNorm.time, DataNorm.x);
title('X axis');
grid on;

ax3 = nexttile(10, [1 3]);
hold on;
plot(DataNorm.time, DataNorm.y, 'red');
title('Y axis');
grid on;

ax4 = nexttile(16, [1 3]);
hold on;
plot(DataNorm.time, DataNorm.z, 'green');
title('Z axis');
grid on;
xlabel("time (s)");

%% peak detection
figPeak = figure;
hold on;
title("Peak detection on X axis");
plot(DataNorm.time, DataNorm.x);
grad = gradient(DataNorm.x);
yyaxis right;
plot(DataNorm.time, grad);

grad2 = gradient(grad);
figure;
plot(DataNorm.time, grad);
yyaxis right;
plot(DataNorm.time, grad2);

%[pks,locs] = findpeaks(DataNorm.x, DataNorm.time,'Annotate','peaks','MinPeakDistance',10);
%text(locs+.02,pks,num2str((1:numel(pks))'))

function TEST1H1 = importfile(filename, dataLines)
%IMPORTFILE Import data from a text file
%  TEST1H1 = IMPORTFILE(FILENAME) reads data from text file FILENAME for
%  the default selection.  Returns the data as a table.
%
%  TEST1H1 = IMPORTFILE(FILE, DATALINES) reads data for the specified
%  row interval(s) of text file FILENAME. Specify DATALINES as a
%  positive scalar integer or a N-by-2 array of positive scalar integers
%  for dis-contiguous row intervals.
%
%  Example:
%  TEST1H1 = importfile("P:\NIN Projects\NIN2272\Laser Tracker Data\NIN2272\TEST_1_081223\TEST_1_H.txt", [7, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 13-Dec-2023 13:40:51

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [7, Inf];
end

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 3);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = " ";

% Specify column names and types
opts.VariableNames = ["x", "y", "z", "time"];
opts.VariableTypes = ["double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";
opts.ConsecutiveDelimitersRule = "join";
opts.LeadingDelimitersRule = "ignore";

% Import the data
TEST1H1 = readtable(filename, opts);

end